// Trusted Digial Web Project
// Hyperonomy Digital Identity Lab
// Parallelspace Corporation
// (c) Copyright 2021 Parallelspace Corporation. All Rights Reserved

//////////////////////////////////////////////////////////////////////////////
/// TRA Common Types

enum TRATrustLevel
{
	Undefined,	
	UnResolvable,
	Unsigned,
	HashedThumbprint,
	SignedHashSignature,
	Notarized,
	CorruptSignatures
}

enum TRAEncryptionFlag
{
	NotEncrypted,
	Encrypted
}

enum TRACredentialType
{
	GenericCredential,
	UDIDDocument,
	VerifiableCredential,
	NotarizedCredential,	
	VerifiableCapabilityAuthorization,
	MasterVerifiableCapabilityAuthorization,
	ServerCertificate,
	RevocationCertificate
}

enum TRAServiceType
{
	Unknown,
	ResourceService,
	StorageService,
	KeyManagementService,
	MasterKeyManagementService,
	AuthenticationService,
	VerifiableDataRegistryService,
}

//////////////////////////////////////////////////////////////////////////////

struct TRAKeyValuePair
{
	string key;
	string value;
}

struct TRAClaim
{
	string key; // for one of the following...
	optional string value;				    
	optional List<TRAKeyValuePair> attribute;
	optional List<List<TRAKeyValuePair>> attributes;
}

struct TRAEncryptedClaims
{
	string ciphertext16;
	string alg; // TODO
	string key; // TODO
}

struct TRACredential_EnvelopeContent
{
	string udid;	
	List<string> context;
	optional string credentialsubjectudid; // bound credential
	optional List<TRAClaim> claims;
	optional TRAEncryptedClaims encryptedclaims;
}

struct TRACredential_PackingLabel
{
	TRACredentialType credtype;	
	long version;
	TRATrustLevel trustLevel;	
	TRAEncryptionFlag encryptionFlag;
	string notaryudid;
	optional string name;
	optional string comment;
}

struct TRACredential_Envelope
{
	TRACredential_EnvelopeContent content;
	TRACredential_PackingLabel label;
}

struct TRACredential_EnvelopeSeal 
{
	optional string hashedThumbprint64;		// digital hash
	optional string signedHashSignature64;	// digital signature of digital hash
	optional string notaryStamp;			// verifiable data registry key
	optional List<string> comments;
}

///////////////////////////////////////////////////////////////////////////////

cell struct TRACredential_Cell // Serializable and Persistable FDO
{	
	TRACredential_Envelope     envelope;
	TRACredential_EnvelopeSeal envelopeseal;
}