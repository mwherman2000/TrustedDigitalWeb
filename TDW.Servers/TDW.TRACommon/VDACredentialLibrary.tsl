// Trusted Digial Web Project
// Hyperonomy Digital Identity Lab
// Parallelspace Corporation
// (c) Copyright 2021 Parallelspace Corporation. All Rights Reserved

include "../TDW.TRACommon/TRACommon.tsl";

//////////////////////////////////////////////////////////////////////////////

struct TDWVDAAccountEntryClaims
{

	string walletname;
	string walletpassword;
	string walletaccountname;
	string ledgeraddress;
}

struct TDWVDAAccountEntryContent
{
	string udid;	
	List<string> context;
	TDWVDAAccountEntryClaims claims;	
}

struct TDWVDAAccountEntryEnvelope
{
	optional TDWVDAAccountEntryContent content;
	optional string encryptedcontent;
	
	TRACredential_Label label;
}

cell struct TDWVDAAccountEntryCell
{	
	TDWVDAAccountEntryEnvelope envelope;
	TRACredential_EnvelopeSeal envelopeseal;
}

//////////////////////////////////////////////////////////////////////////////

struct TDWVDASmartContractEntryClaims
{	
	string smartcontractledgeraddress;
	string vdaserviceendpointudid;
}

struct TDWVDASmartContractEntryContent
{
	string udid;	
	List<string> context;	
	TDWVDASmartContractEntryClaims claims;
}

struct TDWVDASmartContractEntryEnvelope
{	
	optional TDWVDASmartContractEntryContent content;
	optional string encryptedcontent;
	
	TRACredential_Label label;
}

cell struct TDWVDASmartContractEntryCell
{	
	TDWVDASmartContractEntryEnvelope SmartContractEntryEnvelope;
	TRACredential_EnvelopeSeal envelopeseal;
}

//////////////////////////////////////////////////////////////////////////////

struct TDWVDAServiceEndpointEntryParm
{
	TRAServiceType servicetype;		
	long id;
	string udid;
	string url;
	long port;
	string controllerudid;
}

struct TDWVDARevocationListEntryParm
{
	string revokeraddress;	
	long id;
	string udid;
	long credid;
	string credudid;
	string serviceEndpointUdid;
	long revokedtocks;
	string revokedbyudid;
	string message;
}

struct TDWVDAIdentityRegistryEntryParm
{
	long id;
	string udid;	
	long credid;
	string credudid;
	string credpublickey;
	string serviceEndpointUdid;
	string issuerudid;
	string controllerudid;
}

struct TDWVDAPostInvocationParameters
{
	string serviceEndpointUrl;
	long servicEndpointPort;	
	string wallet;
	string walletPassword;
	string senderAccount;
}

///////////////////////////////////////////////////////////////////////////////

struct TDWPostResponse
{
	string result;
}

struct TDWGetVDAPostResultRequest
{
	TDWVDAPostInvocationParameters parms;
	string txId;
}
struct TDWGetVDAPostResultResponse
{
	string result;
}
protocol GetVDAPostResult
{
	Type: HTTP;
	Request: TDWGetVDAPostResultRequest;
	Response: TDWGetVDAPostResultResponse;
}

// Identity Registry Entries

struct TDWPostVDAIdentityRegistryEntryRequest
{
	TDWVDAPostInvocationParameters parms;	
	TDWVDAIdentityRegistryEntryParm entry;
}

protocol PostVDAIdentityRegistryEntry
{
	Type: Http;
	Request: TDWPostVDAIdentityRegistryEntryRequest;
	Response: TDWPostResponse;
}

struct TDWIsCredentialValidRequest
{
	string udid;
}

struct TDWIsCredentialValidResponse
{
	bool IsCredentialValid;
	TRATrustLevel trustlevel;
	string message;
}

protocol IsCredentialValid
{
	Type: HTTP;
	Request: TDWIsCredentialValidRequest;
	Response: TDWIsCredentialValidResponse;
}

struct TDWIsCredentialRevokedRequest
{
	string udid;
}

struct TDWIsCredentialRevokedResponse
{
	bool IsCredentialRevoked;
	string message;
}

protocol IsCredentialRevoked
{
	Type: HTTP;
	Request: TDWIsCredentialRevokedRequest;
	Response: TDWIsCredentialRevokedResponse;
}

struct TDWIsCredentialVerifiedRequest
{
	string udid;
}

struct TDWIsCredentialVerifiedResponse
{
	bool IsCredentialVerified;
	string message;
}

protocol IsCredentialVerified
{
	Type: HTTP;
	Request: TDWIsCredentialVerifiedRequest;
	Response: TDWIsCredentialVerifiedResponse;
}

// Service Endpoint Entries

struct TDWPostVDAServiceEndpointEntryRequest
{
	TDWVDAPostInvocationParameters parms;	
	TDWVDAServiceEndpointEntryParm entry;
}

protocol PostVDAServiceEndpointEntry
{
	Type: Http;
	Request: TDWPostVDAIdentityRegistryEntryRequest;
	Response: TDWPostResponse;
}

struct TDWGetServiceEndpointEntryRequest
{
	string udid;
}

struct TDWGetServiceEndpointEntryResponse
{
	TDWVDAServiceEndpointEntryParm entry;
}

protocol GetServiceEndpointEntry
{
	Type: HTTP;
	Request: TDWGetServiceEndpointEntryRequest;
	Response: TDWGetServiceEndpointEntryResponse;
}

// Revocation List Entries

struct TDWPostVDARevocationListEntryRequest
{
	TDWVDAPostInvocationParameters parms;	
	TDWVDARevocationListEntryParm entry;	
}

protocol PostVDARevocationListEntry
{
	Type: Http;
	Request: TDWPostVDARevocationListEntryRequest;
	Response: TDWPostResponse;
}

struct TDWGetRevocationListEntryRequest
{
	string udid;
}

struct TDWGetRevocationListEntryResponse
{
	TDWVDARevocationListEntryParm entry;
}

protocol GetRevocationListEntry
{
	Type: HTTP;
	Request: TDWGetRevocationListEntryRequest;
	Response: TDWGetRevocationListEntryResponse;
}

// Account Registry Entries

struct TDWSaveAccountRegistryEntryRequest
{
	long id; // TODO
}
struct TDWSaveAccountRegistryEntryResponse
{
	long id; // TODO
}
protocol SaveAccountRegistryEntry
{
	Type: HTTP;
	Request: TDWSaveAccountRegistryEntryRequest;
	Response: TDWSaveAccountRegistryEntryResponse;
}

struct TDWGetAccountRegistryEntryRequest
{
	string udid;
}
struct TDWGetAccountRegistryEntryResponse
{
	TDWVDAAccountEntryClaims entry;
}
protocol GetAccountRegistryEntry
{
	Type: HTTP;
	Request: TDWGetAccountRegistryEntryRequest;
	Response: TDWGetAccountRegistryEntryResponse;
}

// Smart Contract Registry Entries

struct TDWSaveSmartContractRegistryEntryRequest
{
	long id; // TODO
}
struct TDWSaveSmartContractRegistryEntryResponse
{
	long id; // TODO
}
protocol SaveSmartContractRegistryEntry
{
	Type: HTTP;
	Request: TDWSaveSmartContractRegistryEntryRequest;
	Response: TDWSaveSmartContractRegistryEntryResponse;
}

struct TDWGetSmartContractRegistryEntryRequest
{
	string udid;
}
struct TDWGetSmartContractRegistryEntryResponse
{
	TDWVDASmartContractEntryContent entry;
}
protocol GetSmartContractRegistryEntry
{
	Type: HTTP;
	Request: TDWGetSmartContractRegistryEntryRequest;
	Response: TDWGetSmartContractRegistryEntryResponse;
}

//////////////////////////////////////////////////////////////////////////////

server TDWVerifiableDataRegistryAgent
{
	protocol PostVDAIdentityRegistryEntry;
	protocol PostVDAServiceEndpointEntry;
	protocol PostVDARevocationListEntry;
	protocol GetVDAPostResult;
	
	protocol IsCredentialValid;
	protocol IsCredentialRevoked;
	protocol IsCredentialVerified; // IsCredentialValid() && !IsCredentialRevoked()
	
	protocol SaveAccountRegistryEntry;
	protocol GetAccountRegistryEntry;

	protocol SaveSmartContractRegistryEntry;
	protocol GetSmartContractRegistryEntry;
}
