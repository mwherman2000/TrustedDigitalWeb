// Trusted Digial Web Project
// Hyperonomy Digital Identity Lab
// Parallelspace Corporation
// (c) Copyright 2021 Parallelspace Corporation. All Rights Reserved

// http://docs.oasis-open.org/ubl/os-UBL-2.1/UBL-2.1.html#T-INVOICE
// http://docs.oasis-open.org/ubl/os-UBL-2.1/xml/UBL-Invoice-2.1-Example.xml
// https://docs.oasis-open.org/ubl/os-UBL-2.3/xml/UBL-Invoice-2.1-Example-Trivial.xml

// Context:
// <Invoice xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
//	xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
//	xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2">
// UBLVersionID: 2.1

include "../TDW.TRACommon/UBL21CommonAggregateComponents.tsl";
include "../TDW.TRACommon/TRACommon.tsl";

//////////////////////////////////////////////////////////////////////////////
/// UBL 2.1 Credentials 

struct Cac_Item_Claims
{
	string cbc_Name;
	Cac_SellersItemIdentification cac_SellersItemIdentification;
	Cbc_SchemeCode cac_StandardItemIdentification;
	List<Cbc_ListCode> cac_CommodityClassification;
	Cac_ClassifiedTaxCategory cac_ClassifiedTaxCategory;
}

struct Cac_Item_Content
{
	string udid;
	List<string> context;
	optional Cac_Item_Claims claims;
	optional TRAEncryptedClaims encryptedclaims;
}

struct Cac_Item_Envelope
{
	Cac_Item_Content content;
	TRACredential_Label label;
}

cell struct Cac_Item_Cell
{
	Cac_Item_Envelope envelope;
	TRACredential_EnvelopeSeal envelopeseal;
}

//////////////////////////////////////////////////////////////////////////////

struct Cac_ExternalReference_Claims
{
	optional string cbc_URI;	
	optional Cbc_EmbeddedDocumentBinaryObject cbc_EmbeddedDocumentBinaryObject;
}

struct Cac_ExternalReference_Content
{
	string udid;
	List<string> context;
	optional Cac_ExternalReference_Claims claims;
	optional TRAEncryptedClaims encryptedclaims;
}

struct Cac_ExternalReference_Envelope
{
	Cac_ExternalReference_Content content;
	TRACredential_Label label;
}

cell struct Cac_ExternalReference_Cell
{
	Cac_ExternalReference_Envelope envelope;
	TRACredential_EnvelopeSeal envelopeseal;
}

//////////////////////////////////////////////////////////////////////////////

struct Cac_Address_Claims
{
	string cbc_ID;
	string cbc_PostBox;
	string cbc_StreetName;
	string cbc_AdditionalStreetName;
	string cbc_BuildingNumber;
	string cbc_Department;
	string cbc_CityName;
	string cbc_CountrySubentityCode;
	Cac_Country cbc_Country;
}

struct Cac_Address_Content
{
	string udid;
	List<string> context;
	optional Cac_Address_Claims claims;
	optional TRAEncryptedClaims encryptedclaims;
}

struct Cac_Address_Envelope
{
	Cac_Address_Content content;
	TRACredential_Label label;
}

cell struct Cac_Address_Cell
{
	Cac_Address_Envelope envelope;
	TRACredential_EnvelopeSeal envelopeseal;
}

cell struct Cac_PostalAddress_Cell
{
	Cac_Address_Envelope envelope;
	TRACredential_EnvelopeSeal envelopeseal;
}

//////////////////////////////////////////////////////////////////////////////

struct Cac_PartyLegalEntity_Claims
{
	string cbc_RegistrationName;
	Cbc_SchemeCode cbc_CompanyID;
	string cbc_RegistrationAddressUdid; // Cbc_Address_Cell
}

struct Cac_PartyLegalEntity_Content
{
	string udid;	
	List<string> context;
	optional Cac_PartyLegalEntity_Claims claims;
	optional TRAEncryptedClaims encryptedclaims;
}

struct Cac_PartyLegalEntity_Envelope
{
	Cac_PartyLegalEntity_Content content;
	TRACredential_Label label;
}

cell struct Cac_PartyLegalEntity_Cell
{
	Cac_PartyLegalEntity_Envelope envelope;
	TRACredential_EnvelopeSeal envelopeseal;
}

//////////////////////////////////////////////////////////////////////////////

struct Cac_Contact_Claims
{
	string cbc_Telephone;
	string cbc_Telefax;
	string cbc_ElectronicMail;
}

struct Cac_Contact_Content
{
	string udid;	
	List<string> context;
	optional Cac_Contact_Claims claims;
	optional TRAEncryptedClaims encryptedclaims;
}

struct Cac_Contact_Envelope
{
	Cac_Contact_Content content;
	TRACredential_Label label;
}

cell struct Cac_Contact_Cell
{
	Cac_Contact_Envelope envelope;
	TRACredential_EnvelopeSeal envelopeseal;	
}

//////////////////////////////////////////////////////////////////////////////

struct Cac_Person_Claims
{
	string cbc_FirstName;
	string cbc_MiddleName;
	string cbc_FamilyName;
	string cbc_JobTitle;
}

struct Cac_Person_Content
{
	string udid;	
	List<string> context;
	optional Cac_Person_Claims claims;
	optional TRAEncryptedClaims encryptedclaims;
}

struct Cac_Person_Envelope
{
	Cac_Person_Content content;
	TRACredential_Label label;
}

cell struct Cac_Person_Cell
{
	Cac_Person_Envelope envelope;
	TRACredential_EnvelopeSeal envelopeseal;	
}

//////////////////////////////////////////////////////////////////////////////

struct Cac_PaymentMeans_Claims
{
	Cbc_ListCode cbc_PaymentMeansCode;
	DateTime cbc_PaymentDueDate;
	string cbc_PaymentChannel;
	string cbc_PaymentID;
	string cac_PayeeFinancialAccountUdid; // Cac_PayeeFinancialAccount_Cell
}

struct Cac_PaymentMeans_Content
{
	string udid;	
	List<string> context;
	optional Cac_PaymentMeans_Claims claims;
	optional TRAEncryptedClaims encryptedclaims;
}

struct Cac_PaymentMeans_Envelope
{
	Cac_PaymentMeans_Content content;
	TRACredential_Label label;
}

cell struct Cac_PaymentMeans_Cell
{
	Cac_PaymentMeans_Envelope envelope;
	TRACredential_EnvelopeSeal envelopeseal;	
}

//////////////////////////////////////////////////////////////////////////////

struct Cac_PayeeFinancialAccount_Claims
{
	string cbc_ID;
	Cac_FinancialInstitutionBranch cac_FinancialInstitutionBranch;
}

struct Cac_PayeeFinancialAccount_Content
{
	string udid;	
	List<string> context;
	optional Cac_PayeeFinancialAccount_Claims claims;
	optional TRAEncryptedClaims encryptedclaims;
}

struct Cac_PayeeFinancialAccount_Envelope
{
	Cac_PayeeFinancialAccount_Content content;
	TRACredential_Label label;
}

cell struct Cac_PayeeFinancialAccount_Cell
{
	Cac_PayeeFinancialAccount_Envelope envelope;
	TRACredential_EnvelopeSeal envelopeseal;	
}

//////////////////////////////////////////////////////////////////////////////

struct Cac_Party_Claims
{
	Cbc_SchemeCode cbc_EndpointID;
	Cac_PartyIdentification cbc_PartyIdentification;
	Cac_PartyName cbc_PartyName;
	string cac_PostalAddressUdid;
	Cac_PartyTaxScheme cbc_PartyTaxScheme;
	
	string cac_PartyLegalEntityUdid;	// Cac_PartyLegalEntity_Cell
	string cac_ContactUdid;				// Cac_Contact_Cell
	string cac_PersonUdid;				// Cac_Person_Cell
}

struct Cac_Party_Content
{
	string udid;	
	List<string> context;	
	optional Cac_Party_Claims claims;
	optional TRAEncryptedClaims encryptedclaims;
}

struct Cac_Party_Envelope
{
	Cac_Party_Content content;
	TRACredential_Label label;
}

cell struct Cac_Party_Cell
{
	Cac_Party_Envelope envelope;
	TRACredential_EnvelopeSeal envelopeseal;
}

//////////////////////////////////////////////////////////////////////////////

struct UBL21_Invoice2_Claims
{
	string cbc_UBLVersionID;
	
	string cbc_ID;
	DateTime cbc_IssueDate;
	Cbc_ListCode cbc_InvoiceTypeCode;
	Cbc_Note Cbc_Note;
	
	DateTime cbc_TaxPointDate;
	Cbc_ListCode cbc_DocumentCurrencyCode;
	string cbc_AccountingCost;
	Cbc_TimePeriod cbc_InvoicePeriod;
	Cbc_OrderReference cbc_OrderReference;

	Cac_DocumentReference cac_ContractDocumentReference;
	List<Cac_DocumentReference> cac_AdditionalDocumentReferences;

	Cac_AccountingSupplierParty cac_AccountingSupplierParty;
	Cac_AccountingCustomerParty cac_AccountingCustomerParty;
	Cac_PayeeParty cac_PayeeParty;

	Cac_Delivery cac_Delivery;

	string cac_PaymentMeansUdid; // Cac_PaymentMeans_Cell
	Cac_PaymentTerms cac_PaymentTerms;
	List<Cac_AllowanceCharge> cac_AllowanceCharges;
	Cac_TaxTotal cac_TaxTotal;
	Cac_LegalMonetaryTotal cac_LegalMonetaryTotal;
	List<Cac_InvoiceLine> cac_InvoiceLine;
}

struct UBL21_Invoice2_Content
{
	string udid;	
	List<string> context;	
	optional UBL21_Invoice2_Claims claims;
	optional TRAEncryptedClaims encryptedclaims;
}

struct UBL21_Invoice2_Envelope
{
	UBL21_Invoice2_Content content;
	TRACredential_Label label;
}

cell struct UBL21_Invoice2_Cell
{
	UBL21_Invoice2_Envelope envelope;
	TRACredential_EnvelopeSeal envelopeseal;
}