// Trusted Digial Web Project
// Hyperonomy Digital Identity Lab
// Parallelspace Corporation
// (c) Copyright 2021 Parallelspace Corporation. All Rights Reserved

// http://docs.oasis-open.org/ubl/os-UBL-2.1/UBL-2.1.html#T-INVOICE
// http://docs.oasis-open.org/ubl/os-UBL-2.1/xml/UBL-Invoice-2.1-Example.xml
// https://docs.oasis-open.org/ubl/os-UBL-2.3/xml/UBL-Invoice-2.1-Example-Trivial.xml

// Context:
// <Invoice xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"
//	xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"
//	xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2">
// UBLVersionID: 2.1

include "../TDW.TRACommon/ISO639-1LanguageCodes.tsl";

//////////////////////////////////////////////////////////////////////////////
/// UBL Invoice Template
//////////////////////////////////////////////////////////////////////////////

struct Cac_AccountingSupplierParty
{
	string cac_PartyUdid; // Cbc_Party_Cell;
}

struct Cac_AccountingCustomerParty
{
	string cac_PartyUdid; // Cbc_Party_Cell;
}

struct Cac_PayeeParty
{
	string cac_PartyUdid; // Cbc_Party_Cell;
}

struct Cbc_SchemeCode
{
	string _schemeID;
	optional string _schemeAgencyID;
	string text;
}

struct Cbc_ListCode
{
	string _listID;
	string _listAgencyID;
	string text;
}

struct Cbc_Note
{
	ISO639_1_LanguageCodes _languageID;	
	string text;
}

struct Cbc_TimePeriod
{
	DateTime cbc_StartDate;
	DateTime cbc_EndDate;
}

struct Cbc_OrderReference
{
	string cbc_ID;	
}

struct Cbc_DocumentReference
{
	string ID;
	string DocumentType;
	optional Cac_Attachment cac_Attachment;
}

struct Cac_Attachment
{
	string Cac_ExternalReferenceUdid; // Cac_ExternalReference_Cell
}

struct Cac_Delivery
{
	DateTime cbc_ActualDeliveryDate;	
	// TODO
}

struct Cbc_EmbeddedDocumentBinaryObject
{
	string _mimeCode;
	string text16;
}

struct Cbc_Country
{
	Cbc_ListCode cbc_IdentificationCode;		
}

//////////////////////////////////////////////////////////////////////////////

struct Cac_ExternalReference_Claims
{
	optional string cbc_URI;	
	optional Cbc_EmbeddedDocumentBinaryObject cbc_EmbeddedDocumentBinaryObject;
}

struct Cac_ExternalReference_Content
{
	string udid;
	List<string> context;
	Cac_ExternalReference_Claims claims;
}

struct Cac_ExternalReference_Envelope
{
	optional Cac_ExternalReference_Content content;
	optional string encryptedcontent;
	
	TRACredentialMetadata metadata;
}

cell struct Cac_ExternalReferences_Cell
{
	Cac_ExternalReference_Envelope envelope;
	TRACredentialEnvelopeSeal envelopeseal;
}

//////////////////////////////////////////////////////////////////////////////

struct Cac_Address_Claims
{
	string cbc_ID;
	string cbc_PostBox;
	string cbc_StreetName;
	string cbc_AdditionalStreetName;
	string cbc_BuildingNumber;
	string cbc_Department;
	string cbc_CityName;
	string cbc_CountrySubentityCode;
	Cbc_Country cbc_Country;
}

struct Cac_Address_Content
{
	string udid;
	List<string> context;
	Cac_Address_Claims claims;
}

struct Cac_Address_Envelope
{
	optional Cac_Address_Content content;
	optional string encryptedcontent;
	
	TRACredentialMetadata metadata;
}

cell struct Cac_Address_Cell
{
	Cac_Address_Envelope envelope;
	TRACredentialEnvelopeSeal envelopeseal;
}

cell struct Cac_PostalAddress_Cell
{
	Cac_Address_Envelope envelope;
	TRACredentialEnvelopeSeal envelopeseal;
}

//////////////////////////////////////////////////////////////////////////////

struct Cac_PartyLegalEntity_Claims
{
	string cbc_RegistrationName;
	Cbc_SchemeCode cbc_CompanyID;
	string cbc_RegistrationAddressUdid; // Cbc_Address_Cell
}

struct Cac_PartyLegalEntity_Content
{
	string udid;	
	List<string> context;
	Cac_PartyLegalEntity_Claims claims;
}

struct Cac_PartyLegalEntity_Envelope
{
	optional Cac_PartyLegalEntity_Content content;
	optional string encryptedcontent;
	
	TRACredentialMetadata metadata;
}

cell struct Cac_PartyLegalEntity_Cell
{
	Cac_PartyLegalEntity_Envelope envelope;
	TRACredentialEnvelopeSeal envelopeseal;
}

//////////////////////////////////////////////////////////////////////////////

struct Cac_Contact_Claims
{
	
}

struct Cac_Contact_Content
{
	string udid;	
	List<string> context;
	Cac_Contact_Claims claims;
}

struct Cac_Contact_Envelope
{
	optional Cac_Contact_Content content;
	optional string encryptedcontent;
	
	TRACredentialMetadata metadata;
}

cell struct Cac_Contact_Cell
{
	Cac_Contact_Envelope envelope;
	TRACredentialEnvelopeSeal envelopeseal;	
}

//////////////////////////////////////////////////////////////////////////////

cell struct Cac_Person_Cell
{
	Cac_Person_Envelope envelope;
	TRACredentialEnvelopeSeal envelopeseal;	
}

//////////////////////////////////////////////////////////////////////////////

struct Cac_PartyIdentification
{
	Cbc_SchemeCode cbc_ID;
}

struct Cbc_PartyName
{
	string cbc_Name;	
}

struct Cac_TaxScheme
{
	Cbc_SchemeCode cbc_ID;	
}

struct Cbc_PartyTaxScheme
{
	Cbc_SchemeCode cbc_CompanyID;
	Cac_TaxScheme cac_TaxScheme;
}

struct Cac_Party_Claims
{
	Cbc_SchemeCode cbc_EndpointID;
	Cac_PartyIdentification cbc_PartyIdentification;
	Cbc_PartyName cbc_PartyName;
	string cac_PostalAddressUdid;
	Cbc_PartyTaxScheme cbc_PartyTaxScheme;
	
	string cac_PartyLegalEntityUdid; // Cac_PartyLegalEntity_Cell
	string cac_ContactUdid; // Cac_Contact_Cell
	string cac_PersonUdid; // Cac_Person_Cell
}

struct Cac_Party_Content
{
	string udid;	
	List<string> context;	
	Cac_Party_Claims claims;
}

struct Cac_Party_Envelope
{
	optional Cac_Party_Content content;
	optional string encryptedcontent;
	
	TRACredentialMetadata metadata;
}

cell struct Cac_Party_Cell
{
	Cac_Party_Envelope envelope;
	TRACredentialEnvelopeSeal envelopeseal;
}

//////////////////////////////////////////////////////////////////////////////

struct UBL21_Invoice2_Claims
{
	string cbc_UBLVersionID;
	string cbc_ID;
	DateTime cbc_IssueDate;
	Cbc_ListCode cbc_InvoiceTypeCode;
	Cbc_Note Cbc_Note;;
	DateTime cbc_TaxPointDate;
	Cbc_ListCode cbc_DocumentCurrencyCode;
	string cbc_AccountingCost;
	Cbc_TimePeriod cbc_InvoicePeriod;
	Cbc_OrderReference cbc_OrderReference;
	Cbc_DocumentReference cbc_ContractDocumentReference;
	List<Cbc_DocumentReference> cbc_AdditionalDocumentReference;

	Cac_AccountingSupplierParty cac_AccountingSupplierParty;
	Cac_AccountingCustomerParty cac_AccountingCustomerParty;
	Cac_PayeeParty cac_PayeeParty;

	Cac_Delivery cac_Delivery;
	// TODO
}

struct UBL21_Invoice2_Content
{
	string udid;	
	List<string> context;	
	UBL21_Invoice2_Claims claims;
}

struct UBL21_Invoice2_Envelope
{
	UBL21_Invoice2_Content content;
	optional string encryptedcontent;
	
	TRACredentialMetadata metadata;
}

cell struct UBL21_Invoice2_Cell;
{
	UBL21_Invoice2_Envelope envelope;
	TRACredentialEnvelopeSeal envelopeseal;
}